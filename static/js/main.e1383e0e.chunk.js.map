{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","uuidv4","contactsActions","addContact","createAction","name","number","payload","id","deleteContact","changeFilter","ContactForm","state","handleSubmit","e","preventDefault","contacts","props","find","item","toLowerCase","alert","onSubmit","resetForm","handleInputChange","target","value","setState","this","className","styles","form","labelTitle","type","input","onChange","pattern","title","required","button","Component","connect","items","dispatch","contact","filterValue","filter","onFilter","ev","filterContacts","nonormalizedFilter","includes","contactList","onDeleteContact","list","map","onClick","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e1383e0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__SfTsf\",\"button\":\"ContactList_button__GrP-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__17-qD\",\"input\":\"Filter_input__2Ht30\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nuuidv4();\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nconst contactsActions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n};\r\n\r\nexport default contactsActions;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (!this.state.name || !this.state.number) {\n      alert(\"Enter the name!\");\n      return;\n    }\n\n    if (\n      contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} already exists. Try another name`);\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.labelTitle}>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={styles.input}\n            value={name}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={styles.labelTitle}>\n          Phone:\n          <input\n            type=\"text\"\n            name=\"number\"\n            className={styles.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The telephone number must contain numbers and may contain spaces, dashes, parentheses and may start with +\"\n            required\n            value={number}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (contact) => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ filterValue, onFilter }) => {\n  return (\n    <form className={styles.form}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={filterValue}\n          onChange={onFilter}\n        />\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  filterValue: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilter: (ev) => dispatch(contactsActions.changeFilter(ev.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contactList.map(({ id, name, number }) => (\n        <li key={id} className={styles.item}>\n          <p>{name}: </p>\n          <p>{number}</p>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst filterContacts = (contacts, filter) => {\n  const nonormalizedFilter = filter.toLowerCase();\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(nonormalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contactList: filterContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={\"loading\"} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__J2a7T\",\"labelTitle\":\"ContactForm_labelTitle__1A6PV\",\"input\":\"ContactForm_input__2bU-s\",\"button\":\"ContactForm_button__18vqy\"};"],"sourceRoot":""}